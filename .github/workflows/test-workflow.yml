name: TODO

on:
  workflow_dispatch:
  push:
    branches:
      - main

env:
  PROJECT_NAME: containers4pentesters
  TOOL_DIR: ./tools

jobs:
  pre-configure:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
     - name: Checkout to repository
       uses: actions/checkout@v3
     - name: Set matrix data
       id: set-matrix
       run: echo "matrix=$(jq -c . < ./tools.json)" >> $GITHUB_OUTPUT
  changes:
    runs-on: ubuntu-latest
    needs: pre-configure
    strategy:
      matrix: ${{ fromJson(needs.pre-configure.outputs.matrix) }}
    # Required permissions
    permissions:
      pull-requests: read
    outputs:
      # Expose matched filters as job 'packages' output variable
      changed_tools: ${{ steps.filter.outputs.changes }}
    steps:
    # For pull requests it's not necessary to checkout the code
    - uses: dorny/paths-filter@v3
      id: filter
      with:
        filters: |
          ${{ matrix.tool_name }}: tools/${{ matrix.tool_name }}
  build-and-push-and-desc-docker-image:
    needs: changes
    strategy:
      matrix: ${{ fromJson(needs.changes.outputs.changed_tools) }}
    name: Build Docker image and push to repositories
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: containers4pentesters
          password: ${{ secrets.DOCKER_SECRET }}

      - name: Extract metadata (tags, labels) for Docker image ${{ env.PROJECT_NAME }}/${{ matrix.tool_name }}
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.PROJECT_NAME }}/${{ matrix.tool_name }}
          tags: |
            type=raw,value=latest
            type=schedule
            type=sha

      # - name: Build and push Docker image ${{ env.PROJECT_NAME }}${{ matrix.tool_name }}
      #   uses: docker/build-push-action@v3
      #   id: docker_build
      #   with:
      #     context: ${{ env.TOOL_DIR }}/${{ matrix.tool_name }}
      #     file: ${{ env.TOOL_DIR }}/${{ matrix.tool_name }}/Dockerfile
      #     push: false
      #     tags: ${{ steps.meta.outputs.tags }}
      #     labels: ${{ steps.meta.outputs.labels }}

      # - name: Docker Hub Description
      #   uses: peter-evans/dockerhub-description@v4
      #   with:
      #     username: ${{ env.PROJECT_NAME }}
      #     password: ${{ secrets.DOCKER_SECRET }}
      #     repository: ${{ env.PROJECT_NAME }}/${{ matrix.tool_name }}
      #     short-description: Containerized ${{ matrix.tool_name }} tool. Created by ${{ env.PROJECT_NAME }}. 
      #     readme-filepath: ${{ env.TOOL_DIR }}/${{ matrix.tool_name }}/README.md

      # - name: Image ${{ env.PROJECT_NAME }}/${{ matrix.tool_name }} digest
      #   run: echo ${{ steps.docker_build.outputs.digest }}
