#!/usr/bin/env bash
# Install common pentester tools in containers as if they were native
#
# Copyright 2022 TheArqsz

SCRIPT_PATH="$( cd -- "$(dirname "$0")" >/dev/null 2>&1 ; pwd -P )"
TOOLS_DIR="$SCRIPT_PATH/tools"
SCRIPTS_DIR="$SCRIPT_PATH/lib"

ctrl_c() {
    echo
	echo "Interrupting script..."
	exit 1
}
trap ctrl_c SIGINT
trap ctrl_c INT

cleanup() {
    unset C4P_LOG_LEVEL
    unset C4P_LOG_FILE
}
trap cleanup EXIT

source $SCRIPTS_DIR/methods.sh

# Default options
tool_to_install="all"
force_install=0
force_fail_on_error=0
log_file=
log_level=3
export C4P_LOG_LEVEL=$log_level
config_file="$HOME/.c4p_config"

# Loop that sets arguments for the script
while [ -n "$1" ]; do 
	case "$1" in
	    -h|--help) 
            show_banner
            show_help
            exit;;
   	    -t|--tool)
            tool_to_install=$2
            shift
            ;;
   	    -f|--force)
            force_install=1
            shift 0
            ;;
   	    --fail)
            force_fail_on_error=1
            shift 0
            ;;
   	    -l|--list)
            list_tools $TOOLS_DIR
            exit 0
            ;;
   	    --log-level)
            log_level=$2
            verify_log_level $log_level
            export C4P_LOG_LEVEL=$log_level
            shift 
            ;;
   	    --log-file)
            log_file=$2
            export C4P_LOG_FILE=$log_file
            echo -n "" > "$log_file"
            shift 
            ;;
   	    --only-log-file)
            export C4P_ONLY_LOG_FILE=1
            shift 0
            ;;
   	    --config)
            config_file=$2
            shift 
            ;;
   	    -v|--verbose)
            set -x
            shift 0
            ;;
        *) 
            echo "Option '$1' is not recognized"
            echo
            show_banner
            show_help
            exit 1
            ;;
      esac
      shift
done

source "$SCRIPTS_DIR/logging.sh"

# Check if tool to install was specified
if [ -z "$tool_to_install" ]; then
   log_info "Tool wasn't specified - installing all"
fi

# Check if c4p config file exists
if ! [ -f "$config_file" ]; then
    touch "$config_file"
fi

verify_tool_exists $TOOLS_DIR $tool_to_install

# Initiate script
show_banner
log_debug "c4p - starting"

# Iterate over all tools in directory
for current_tool in $(ls -1 $TOOLS_DIR/); do
    current_tool_path="$TOOLS_DIR/$current_tool"
    if ! validate_tool_directory "$current_tool_path"; then
        continue
    fi
    if [ "$tool_to_install" != "all" ] && [ "$tool_to_install" != "$current_tool" ]; then
        log_debug "Skipping installation of tool $current_tool"
        continue
    fi
    bash $current_tool_path/test.sh 1 2>/dev/null
    if [ $? -eq 0 ] && [ $force_install -eq 0 ]; then
        log_info "Tool $current_tool already installed - skipping"
        continue
    else
        log_info "Tool $current_tool is not installed or is forced to be reinstalled - installing"
    fi
    bash $SCRIPTS_DIR/install.sh $current_tool
    bash $current_tool_path/test.sh 2>/dev/null
    test_status=$?
    if [ $test_status -eq 1 ] && [ $force_fail_on_error -eq 0 ]; then
        continue
    elif [ $test_status -eq 1 ] && [ $force_fail_on_error -eq 1 ]; then
        log_error "Tool $current_tool failed to be installed - exiting"
        exit 1
    elif [ $test_status -eq 0 ]; then
        log_info "Tool $current_tool successfully installed."
    fi
done

if ! grep ". $HOME/.c4p_config" "$HOME/.bashrc" &>/dev/null; then
    echo ". $HOME/.c4p_config" >> $HOME/.bashrc
fi