#!/usr/bin/env bash
# Inspired by https://github.com/adoyge-h/bash-logger/blob/master/src/logger.sh

LOG_FILE=${C4P_LOG_FILE:-}
LOG_LEVEL=${C4P_LOG_LEVEL:-3}
ONLY_LOG_FILE=${C4P_ONLY_LOG_FILE:-0}

if [ -n "$LOG_FILE" ] && [ "$LOG_FILE" != "-" ] && [ $ONLY_LOG_FILE -eq 0 ]; then
    touch "$LOG_FILE"
    function _echo() {
        echo "$1" | tee -a "$LOG_FILE"
    }
elif [ -n "$LOG_FILE" ] && [ "$LOG_FILE" != "-" ] && [ $ONLY_LOG_FILE -eq 1 ]; then
    touch "$LOG_FILE"
    function _echo() {
        echo "$1" >> "$LOG_FILE"
    }
else
    function _echo() {
        echo "$1"
    }
fi

log_debug() {
    local message
    if [ -n "$1" ]; then
        message="$1"
    else
        read message 
    fi
    if [[ "$LOG_LEVEL" -ge "4" ]]; then
        _echo "[$(date +"%Y/%m/%d %H:%M:%S")][${BASH_SOURCE[1]}:${BASH_LINENO[0]}][DEBUG] $message"
    fi
}

log_info() {
    local message
    if [ -n "$1" ]; then
        message="$1"
    else
        read message 
    fi
    if [[ "$LOG_LEVEL" -ge "3" ]]; then
        _echo "[$(date +"%Y/%m/%d %H:%M:%S")][INFO] $message"
    fi
}

log_warn() {
    local message
    if [ -n "$1" ]; then
        message="$1"
    else
        read message 
    fi
    if [[ "$LOG_LEVEL" -ge "2" ]]; then
        _echo "[$(date +"%Y/%m/%d %H:%M:%S")][WARN] $message"
    fi
}

log_error() {
    local message
    if [ -n "$1" ]; then
        message="$1"
    else
        read message 
    fi
    if [[ "$LOG_LEVEL" -ge 1 ]]; then
        _echo "[$(date +"%Y/%m/%d %H:%M:%S")][ERROR] $message"
    fi
}

log_raw() {
    local message
    if [ -n "$1" ]; then
        message="$1"
    else
        read message 
    fi
    if [[ "$LOG_LEVEL" -ge "0" ]]; then
        _echo "$1"
    fi
}

wait_for_process_to_end()
{
    local -r pid="${1}"
    log_debug "Waiting for process to finish"
    if [ "$DEBIAN_FRONTEND" == 'noninteractive' ]; then
        wait $pid
        if ! [ "$?" -eq "0" ]; then 
            log_error "Process finished with error"
        fi
        exit 0
    fi
    local -r delay='0.75'
    local spinstr='\|/-'
    local temp
    while ps a | awk '{print $1}' | grep -q "${pid}"; do
        temp="${spinstr#?}"
        printf " [%c]  " "${spinstr}"
        spinstr=${temp}${spinstr%"${temp}"}
        sleep "${delay}"
        printf "\b\b\b\b\b\b"
    done
    printf "    \b\b\b\b"
}