#!/usr/bin/env bash

LIB_PATH="$( cd -- "$( dirname -- "${BASH_SOURCE[0]:-$0}"; )" &> /dev/null && pwd 2> /dev/null; )"
WORKING_C4P_DIR="$(pwd)"
ALL_TOOLS_PATH="$(dirname $LIB_PATH)/tools"
CURRENT_TOOL=$1
source "$LIB_PATH/logging.sh"

if [ -z "$CURRENT_TOOL" ]; then
    echo "Tool not specified. Pass it as an argument."
    exit 1
fi

CURRENT_TOOL_PATH="$ALL_TOOLS_PATH/$CURRENT_TOOL"

if ! [ -d "$CURRENT_TOOL_PATH" ]; then
    echo "Tool $CURRENT_TOOL doesn't exist - exiting"
    exit 1
fi

CONTAINER_RUNTIME=${CONTAINER_RUNTIME:-docker}
CONTAINER_NAME=c4p-$CURRENT_TOOL
CONTAINER_IMAGE=containers4pentesters/$CURRENT_TOOL:latest
HOME=${HOME:-/tmp}

MACHINE_TYPE="unkown"
case "$(uname -s)" in
    Linux*)     MACHINE_TYPE=Linux;;
    Darwin*)    MACHINE_TYPE=Mac;;
esac

if [ "$MACHINE_TYPE" == "Linux" ]; then
    log_debug "You are running on Linux-based system. Using 'host' networking or the one you specified"
    DOCKER_NETWORK_TYPE=${DOCKER_NETWORK_TYPE:-host}
elif [ "$MACHINE_TYPE" == "Mac" ]; then
    log_warn "You are running on MacOS or other Darwin-based system. 'host' networking is not supported - using 'bridge' or the one you specified"
    DOCKER_NETWORK_TYPE=${DOCKER_NETWORK_TYPE:-bridge}
else
    DOCKER_NETWORK_TYPE=${DOCKER_NETWORK_TYPE:-bridge}
fi


if [ -f "$CURRENT_TOOL_PATH/pre-run.sh" ]; then
    . "$CURRENT_TOOL_PATH/pre-run.sh"
fi

if [ "$DEBIAN_FRONTEND" = "noninteractive" ]; then
    $CONTAINER_RUNTIME run \
    -t --rm --name $CONTAINER_NAME \
    --network $DOCKER_NETWORK_TYPE \
    --user `id -u`:`id -g` \
    --volume "$HOME":"$HOME" \
    --volume "$WORKING_C4P_DIR":"$WORKING_C4P_DIR" \
    --volume /tmp:/tmp \
    --volume /dev:/dev \
    --workdir "$WORKING_C4P_DIR" \
    -e HOME=$HOME \
    $DOCKER_OPTIONS $CONTAINER_IMAGE "${@:2}"
else
    $CONTAINER_RUNTIME run \
    -it --rm --name $CONTAINER_NAME \
    --network $DOCKER_NETWORK_TYPE \
    --user `id -u`:`id -g` \
    --volume "$HOME":"$HOME" \
    --volume "$WORKING_C4P_DIR":"$WORKING_C4P_DIR" \
    --volume /tmp:/tmp \
    --volume /dev:/dev \
    --workdir "$WORKING_C4P_DIR" \
    -e HOME="$HOME" \
    -e TERM=$TERM \
    $DOCKER_OPTIONS $CONTAINER_IMAGE "${@:2}"
fi

docker container rm -f -v $CONTAINER_NAME &>/dev/null
docker volume rm -f $CONTAINER_NAME &>/dev/null